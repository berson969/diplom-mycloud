services:
    postgres:
        container_name: "${DB_HOST}"
        image: postgres:16-alpine
        ports:
            - "${DB_PORT}:5432"
        restart: unless-stopped
        environment:
            POSTGRES_USER: "${DB_USER}"
            POSTGRES_PASSWORD: "${DB_PASS}"
            POSTGRES_DB: "${DB_BASE}"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_BASE}" ]
            interval: 10s
            timeout: 15s
            retries: 5
        volumes:
            - postgres_data:/var/lib/postgresql/data/

    backend:
        container_name: backend
        build:
            context: ./backend
        volumes:
            - ./backend:/app
            - static_volume:/app/static
            - storage_volume:/app/storage
        expose:
            - 8000
        depends_on:
            - postgres

    nginx-proxy:
        container_name: proxy
#        build:
#            context: ./nginx
        image: nginx:mainline
        restart: always
        environment:
            SERVER_NAME: "${SERVER_NAME:-localhost}"
        ports:
            - '80:80'
            - '443:443'
        command: sh -c "chmod +x /home/run.sh && /home/run.sh"
        volumes:
            - static_volume:/static
            - storage_volume:/storage
            - ./nginx:/home
        depends_on:
            - postgres
            - backend

volumes:
    postgres_data:
    static_volume:
    storage_volume:
