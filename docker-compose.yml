services:
    postgres:
        container_name: "${DB_HOST}"
        image: postgres:16-alpine
        ports:
            - "${DB_PORT}:5432"
        restart: unless-stopped
        environment:
            POSTGRES_USER: "${DB_USER}"
            POSTGRES_PASSWORD: "${DB_PASS}"
            POSTGRES_DB: "${DB_BASE}"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_BASE}" ]
            interval: 10s
            timeout: 15s
            retries: 5
        volumes:
            - postgres_data:/var/lib/postgresql/data/

    backend:
        container_name: backend
        build:
            context: ./backend
        volumes:
            - ./backend:/app
            - static_volume:/app/static
            - storage:/storage
#        expose:
#            - 8000
        ports:
            - 8000:8000
        depends_on:
            - postgres

    certbot:
        build: ./certbot
        container_name: certbot
        volumes:
            - ./nginx/certbot:/etc/letsencrypt
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf

    nginx-proxy:
        container_name: nginx-proxy
        build:
            context: ./nginx
        restart: always
        environment:
            SERVER_NAME: "${SERVER_NAME}"
        ports:
            - '80:80'
            - '433:433'
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt
            - static_volume:/usr/share/nginx/static
            - storage:/storage
            - ./nginx:/etc/nginx
        depends_on:
            - postgres
            - backend
            - certbot

volumes:
    postgres_data:
    static_volume:
    storage:
