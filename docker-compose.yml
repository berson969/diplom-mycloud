services:
    nginx:
        container_name: nginx-proxy
        build: ./nginx
        restart: always
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - static_volume:/static
            - storage:/storage
            - ./nginx:/etc/nginx
        depends_on:
            - backend

    backend:
        container_name: backend-server
        build:
            context: ./backend
        volumes:
            - ./backend:/app
            - static_volume:/app/static
            - storage:/storage
        # close backend from outside
        expose:
            - 8000
        environment:
            DJANGO_SETTINGS_MODULE: "${DJANGO_SETTINGS_MODULE}"
            DB_HOST: "${DB_HOST}"
        depends_on:
            - only-db

    only-db:
        container_name: "${DB_HOST}"
        image: postgres:latest
        ports:
            - "${DB_PORT}:5432"
        restart: unless-stopped
        environment:
            POSTGRES_USER: "${DB_USER}"
            POSTGRES_PASSWORD: "${DB_PASS}"
            POSTGRES_DB: "${DB_BASE}"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_BASE}" ]
            interval: 10s
            timeout: 15s
            retries: 5
        volumes:
            - postgres_data:/var/lib/postgresql/data/

volumes:
    postgres_data:
    static_volume:
    storage:
