name: Server Backend Django application MyCloud

on:
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-20.04
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: "1"

    services:
      postgres_main:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_NAME: ${{ env.POSTGRES_NAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install package
        run: pip install -r requirements.txt

      - name: Linter
        run: flake8 logistic  --exclude=logistic/migrations

      - name: Tests
        run: python manage.py test
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}
          DEBUG: ${{ env.DEBUG }}
          DB_NAME: ${{ env.POSTGRES_DB }}
          DB_USER: ${{ env.POSTGRES_NAME }}
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_PORT: ${{ env.POSTGRES_PORT }}
          ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          #          password: ${{ secrets.SSH_PASSWORD }}
          key: ${{ secrets.SSH_KEY }}
          script: expect /home/berson/Django-CIDI/pull.exp
#          script: bash -S /home/berson/Django-CIDI/pull.sh