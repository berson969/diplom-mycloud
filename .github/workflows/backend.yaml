name: Deploy Backend Application

on:
    push:
        branches: [ main ]

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: mycloud-env

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  sparse-checkout: |
                      backend/
                      nginx/
                      docker-compose.yml

            - name: Set up SSH with credentials
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: Clear target directory on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  rm -rf /home/${{ secrets.SSH_USER }}/*
                "      
                  
            - name: Add server to known hosts
              run: |
                mkdir -p ~/.ssh
                if ssh-keygen -F ${{ secrets.SSH_HOST }} > /dev/null; then
                ssh-keygen -R ${{ secrets.SSH_HOST }}
                fi
                ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts   
                
            - name: Install OpenSSL and generate self-signed certificate
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  sudo apt-get update && \
                  sudo apt-get install -y openssl && \
                  sudo mkdir -p /nginx/ssl && \
                  sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                    -keyout /nginx/ssl/cert.key -out /nginx/ssl/cert.crt \
                    -subj '/CN=${{ secrets.SSH_HOST }}/O=Netology/C=RU' \
                "

            - name: Install Docker Compose on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  sudo apt-get update && sudo apt-get install -y docker-compose
                "

            - name: Copy Docker Compose file to server
              uses: appleboy/scp-action@v0.1.0
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                password: ${{ secrets.SSH_PASSWORD }}
                source: "."
                target: "/home/${{ secrets.SSH_USER }}"

            - name: Verify file existence
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  ls /home/${{ secrets.SSH_USER }}
                "
          
            - name: Deploy Docker Compose application on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  docker-compose -f /home/${{ secrets.SSH_USER }}/docker-compose.yml up -d
                "
