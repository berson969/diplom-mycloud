name: Deploy Backend Application

on:
    push:
        branches: [ main ]

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: mycloud-env

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  sparse-checkout: |
                      backend/
                      nginx/
                      docker-compose.yaml

            - name: Create .env file in repository
              run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env &&
                echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env &&
                echo "OTHER_SECRET=${{ secrets.OTHER_SECRET }}" >> .env
                    
            - name: List files in the workspace
              run: ls -R

            - name: Set up SSH with credentials
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
                  
            - name: Add server to known hosts
              run: |
                mkdir -p ~/.ssh
                ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts     

            - name: Install Docker Compose on server
              run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo apt-get update && sudo apt-get install -y docker-compose"

            - name: Clear target directory on server
              run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm -rf /home/${{ secrets.SSH_USER }}/*"

            - name: Copy Docker Compose file to server
              uses: appleboy/scp-action@v0.1.0
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                password: ${{ secrets.SSH_PASSWORD }}
                source: "."
                target: "/home/${{ secrets.SSH_USER }}"

            - name: Create .env file on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SECRET_KEY=${{ secrets.SECRET_KEY }}' > /home/${{ secrets.SSH_USER }}/project/.env"
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' >> /home/${{ secrets.SSH_USER }}/project/.env"
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'OTHER_SECRET=${{ secrets.OTHER_SECRET }}' >> /home/${{ secrets.SSH_USER }}/project/.env"


            - name: Verify file existence
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ls /home/${{ secrets.SSH_USER }}"
          
            - name: Deploy Docker Compose application on server
              run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker-compose -f /home/${{ secrets.SSH_USER }}/docker-compose.yml up -d"
