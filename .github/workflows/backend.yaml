name: Deploy Backend Application

on:
    push:
        branches: [ main ]

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: mycloud-env

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  path: .
                  fetch-depth: 0
                  ref: main
                  clean: true

            -  name: Sync directories
               run: |
                rsync -a backend/ nginx/ .

            - name: Set up SSH with credentials
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: Add server to known hosts
              run: |
                mkdir -p ~/.ssh
                if ssh-keygen -F ${{ secrets.SSH_HOST }} > /dev/null; then
                ssh-keygen -R ${{ secrets.SSH_HOST }}
                fi
                ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

            - name: Clear target directory on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  rm -rf /home/${{ secrets.SSH_USER }}/* \
                "

            - name: Install Docker Compose on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  sudo apt-get update && sudo apt-get install -y docker-compose
                "

            - name: Copy Docker Compose file to server
              uses: appleboy/scp-action@v0.1.0
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                password: ${{ secrets.SSH_PASSWORD }}
                source: "."
                target: "/home/${{ secrets.SSH_USER }}"

            - name: Create .env file on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  echo 'DB_BASE=${{ secrets.DB_BASE }}' > /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'DB_HOST=${{ secrets.DB_HOST }}' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'DB_PORT=${{ secrets.DB_PORT }}' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'DB_USER=${{ secrets.DB_USER }}' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'DB_PASS=${{ secrets.DB_PASS }}' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'SECRET_KEY=${{ secrets.SECRET_KEY }}' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'DEBUG=False' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'SERVER_NAME=185.10.45.10' >> /home/${{ secrets.SSH_USER }}/.env && \
                  echo 'FRONTEND_URL=https://berson969.github.io' >> /home/${{ secrets.SSH_USER }}/.env
                "

            - name: Copy .env file to another directory on server
              run: |
                  ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                    cp /home/${{ secrets.SSH_USER }}/.env /home/${{ secrets.SSH_USER }}/backend/.env \
                  "

            - name: Deploy Docker Compose application on server
              run: |
                ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  cd /home/${{ secrets.SSH_USER }} && sudo docker-compose up -d --force-recreate --remove-orphans
                 "
